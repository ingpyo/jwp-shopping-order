CREATE TABLE product (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    price INT NOT NULL,
    image_url VARCHAR(255) NOT NULL
);

CREATE TABLE member (
     id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     name VARCHAR(255) NOT NULL UNIQUE,
     email VARCHAR(255) NOT NULL UNIQUE,
     password VARCHAR(255) NOT NULL,
     point INT UNSIGNED DEFAULT 0
);

CREATE TABLE cart_item (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    member_id BIGINT NOT NULL,
    product_id BIGINT NOT NULL,
    quantity INT UNSIGNED NOT NULL
--     FOREIGN KEY (member_id) REFERENCES member(id),
--     FOREIGN KEY (product_id) REFERENCES product(id)
);

CREATE TABLE order (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    total_price INT UNSIGNED NOT NULL,
    point INT UNSIGNED DEFAULT 0,
    created_at DATETIME DEFAULT now()
);

CREATE TABLE ordered_item (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id BIGINT UNSIGNED NOT NULL,
    member_id BIGINT UNSIGNED NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    product_price INT UNSIGNED NOT NULL,
    product_quantity INT UNSIGNED NOT NULL
);

CREATE TABLE coupon (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    min_amount INT UNSIGNED DEFAULT 0,
    discount_percent DECIMAL(3, 0) CHECK (discount_percent >= 1 AND discount_percent <= 100),
);

CREATE TABLE member_coupon (
    id        BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    member_id BIGINT UNSIGNED NOT NULL,
    coupon_id BIGINT UNSIGNED NOT NULL,
    status    TINYINT DEFAULT 1
);

CREATE TABLE ordered_coupon (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id BIGINT UNSIGNED NOT NULL,
    member_coupon_id BIGINT UNSIGNED NOT NULL
)
